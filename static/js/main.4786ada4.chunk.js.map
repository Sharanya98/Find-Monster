{"version":3,"sources":["components/card.component/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monsters","id","alt","s","name","email","CardList","map","mon","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","res","json","users","setState","this","filteredmonsters","filter","monster","toLowerCase","includes","e","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAIaA,EAAO,SAACC,GAAD,OAEhB,sBAAKC,UAAU,kBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,SAASC,GAAzC,0BAAqEC,IAAI,QAAOC,GAAC,IACzF,mCAAON,EAAMG,SAASI,QACtB,4BACMP,EAAMG,SAASK,YCLhBC,EAAW,SAACT,GAAD,OAGnB,qBAAKC,UAAU,YAAf,SAEKD,EAAMG,SAASO,KAAI,SAAAC,GAAG,OACpB,cAAC,EAAD,CAAmBR,SAAWQ,GAAnBA,EAAIP,UCRdQ,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAcC,EAAjB,EAAiBA,aAAjB,OAErB,uBACIb,UAAY,SACZc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC8BHG,E,kDA/Bb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXf,SAAU,GACVgB,YAAa,IALH,E,qDAQd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAEtB,SAAUqB,S,oBAE7C,WAAU,IAAD,SAE2BE,KAAKR,MAA/Bf,EAFD,EAECA,SAAUgB,EAFX,EAEWA,YAEZQ,EAAmBxB,EAASyB,QAAO,SAAAC,GAAO,OAAIA,EAAQtB,KAAKuB,cAAcC,SAASZ,EAAYW,kBACpG,OACE,sBAAK7B,UAAU,MAAf,UAEE,kDACA,cAAC,EAAD,CAAWY,YAAY,iBAAiBC,aAAc,SAAAkB,GAAC,OAAI,EAAKP,SAAS,CAAEN,YAAaa,EAAEC,OAAOC,WACjG,cAAC,EAAD,CAAU/B,SAAUwB,W,GAxBVQ,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4786ada4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.styles.css'\r\n\r\n\r\nexport const Card = (props) => (\r\n \r\n    <div className=\"card-container \">\r\n        <img src={`https://robohash.org/${props.monsters.id}?set=set2&size=180x180`} alt=\"monon\"s />\r\n        <h2> { props.monsters.name}</h2>\r\n        <p>\r\n            { props.monsters.email}\r\n        </p>\r\n        \r\n       \r\n    </div>\r\n     \r\n    \r\n\r\n)","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport { Card } from '../card.component/card.component';\r\n\r\n\r\nexport const CardList = (props) =>\r\n(\r\n    \r\n     <div className=\"card-list\">\r\n        {  \r\n          props.monsters.map(mon => (\r\n            <Card key={mon.id} monsters={ mon }/>\r\n          ))\r\n          }          \r\n      </div>\r\n);","import React from \"react\";\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ( {placeholder , handleChange}) => (\r\n\r\n    <input\r\n        className = 'search'\r\n        type='search'\r\n        placeholder={placeholder}\r\n        onChange={handleChange} />\r\n); ","\nimport React from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then(users => this.setState({ monsters: users }))\n  }\n  render() {\n\n    const { monsters, searchField } = this.state\n\n    const filteredmonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder='search monster' handleChange={e => this.setState({ searchField: e.target.value })} />\n        <CardList monsters={filteredmonsters} />\n      </div>\n    );\n  }\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}